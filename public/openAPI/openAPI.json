{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.",
        "version": "1.0.0",
        "title": "Bookstore",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "apiteam@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "tags": [
        {
            "name": "bookstore",
            "description": "Everything about yours books",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "language",
            "description": "Manages book languages"
        },
        {
            "name": "user",
            "description": "Operations about user",
            "externalDocs": {
                "description": "Find out more about our store",
                "url": "http://swagger.io"
            }
        }
    ],
    "schemes": [
        "http"
    ],
    "paths": {
        "/languages": {
            "get": {
                "tags": [
                    "language"
                ],
                "summary": "Returns all languages",
                "description": "Returns all languages",
                "operationId": "getAllLanguages",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Language"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/languages/{languageID}": {
            "put": {
                "tags": [
                    "language"
                ],
                "summary": "Inserts a new language",
                "description": "Inserts a new language",
                "operationId": "putLanguages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "languageID",
                        "in": "path",
                        "description": "ID of the language",
                        "required": true,
                        "type": "string",
                        "maximum": 10,
                        "minimum": 2,
                        "format": "int64",
                        "example": "PT-BR"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "order placed for purchasing the pet",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LanguageInsert"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successfully updated the language",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "201": {
                        "description": "Successfully inserted a new language",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "400": {
                        "description": "Invalid Order"
                    }
                }
            },
            "get": {
                "tags": [
                    "language"
                ],
                "summary": "Returns language by ID",
                "description": "Returns language by ID",
                "operationId": "getOneLanguage",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "languageID",
                        "in": "path",
                        "description": "ID of the language",
                        "required": true,
                        "type": "string",
                        "maximum": 10,
                        "minimum": 2,
                        "format": "int64",
                        "example": "PT-BR"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "language"
                ],
                "summary": "Delete language by ID",
                "description": "Delete language by ID",
                "operationId": "deleteLanguage",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "languageID",
                        "in": "path",
                        "description": "ID of the language",
                        "required": true,
                        "type": "string",
                        "maximum": 10,
                        "minimum": 2,
                        "format": "int64",
                        "example": "PT-BR"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Language"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        },
        "petstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
            "flow": "implicit",
            "scopes": {
                "read:pets": "read your pets",
                "write:pets": "modify pets in your account"
            }
        }
    },
    "definitions": {
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "Language": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "PT-BR"
                },
                "description": {
                    "type": "string",
                    "example": "Portuguese Brazillian"
                }
            },
            "xml": {
                "name": "Language"
            }
        },
        "LanguageInsert": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Portuguese Brazillian"
                }
            },
            "xml": {
                "name": "Language"
            }
        },
        "Pet": {
            "type": "object",
            "required": [
                "name",
                "photoUrls"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "category": {
                    "$ref": "#/definitions/Category"
                },
                "name": {
                    "type": "string",
                    "example": "doggie"
                },
                "photoUrls": {
                    "type": "array",
                    "xml": {
                        "wrapped": true
                    },
                    "items": {
                        "type": "string",
                        "xml": {
                            "name": "photoUrl"
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "xml": {
                        "wrapped": true
                    },
                    "items": {
                        "xml": {
                            "name": "tag"
                        },
                        "$ref": "#/definitions/Tag"
                    }
                },
                "status": {
                    "type": "string",
                    "description": "pet status in the store",
                    "enum": [
                        "available",
                        "pending",
                        "sold"
                    ]
                }
            },
            "xml": {
                "name": "Pet"
            }
        },
        "Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                }
            },
            "xml": {
                "name": "Tag"
            }
        },
        "Order": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "petId": {
                    "type": "integer",
                    "format": "int64"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "shipDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string",
                    "description": "Order Status",
                    "enum": [
                        "placed",
                        "approved",
                        "delivered"
                    ]
                },
                "complete": {
                    "type": "boolean"
                }
            },
            "xml": {
                "name": "Order"
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User Status"
                }
            },
            "xml": {
                "name": "User"
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}